# This workflow will validate the Swift package and examples
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Validate Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    
    - name: Show Environment Info
      run: |
        # Show Xcode version
        xcodebuild -version
        # Show Swift version
        swift --version
        
    - name: Update Package Swift Version
      run: |
        # Get current Swift version
        SWIFT_VERSION=$(swift --version | head -1 | sed -E 's/.*Swift version ([0-9]+\.[0-9]+).*/\1/')
        echo "Current Swift version: $SWIFT_VERSION"
        
        # Get current tools version from Package.swift
        TOOLS_VERSION=$(head -1 Package.swift | sed -E 's/\/\/ swift-tools-version: ([0-9]+\.[0-9]+).*/\1/')
        echo "Current tools version: $TOOLS_VERSION"
        
        # Update Package.swift to use the available Swift version
        sed -i '' "s/swift-tools-version: [0-9]\+\.[0-9]\+/swift-tools-version: $SWIFT_VERSION/" Package.swift
        echo "Updated Package.swift to use Swift $SWIFT_VERSION:"
        head -1 Package.swift
    
    - name: Build Package
      run: |
        # Try to build the package
        echo "Building package to validate examples..."
        swift build -v
        
        # If build succeeds, we know examples are valid
        if [ $? -eq 0 ]; then
          echo "✅ Package built successfully, examples are valid"
        else
          echo "❌ Package build failed, examples may contain errors"
          exit 1
        fi
